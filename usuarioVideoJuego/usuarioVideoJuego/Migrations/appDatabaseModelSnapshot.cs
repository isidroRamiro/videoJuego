// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using usuarioVideoJuego.Contexto;

#nullable disable

namespace usuarioVideoJuego.Migrations
{
    [DbContext(typeof(AplicacionContexto))]
    partial class appDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("usuarioVideoJuego.Modelo.email", b =>
                {
                    b.Property<int>("Id_Email")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Email"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("integer");

                    b.HasKey("Id_Email");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("email");
                });

            modelBuilder.Entity("usuarioVideoJuego.Modelo.usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Usuario"));

                    b.Property<string>("Edad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Usuario");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("usuarioVideoJuego.Modelo.videoJuego", b =>
                {
                    b.Property<int>("Id_VideoJuego")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_VideoJuego"));

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("esGrupal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("tipo")
                        .HasColumnType("boolean");

                    b.Property<string>("tipoDePgo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_VideoJuego");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("videoJuegos");
                });

            modelBuilder.Entity("usuarioVideoJuego.Modelo.email", b =>
                {
                    b.HasOne("usuarioVideoJuego.Modelo.usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("usuarioVideoJuego.Modelo.videoJuego", b =>
                {
                    b.HasOne("usuarioVideoJuego.Modelo.usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
